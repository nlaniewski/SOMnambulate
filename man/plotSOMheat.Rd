% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_funcs.R
\name{plotSOMheat}
\alias{plotSOMheat}
\title{Heatmap of cluster-specific, per-marker median expression values}
\usage{
plotSOMheat(
  fsom,
  heatmap.type = c("pheatmap", "plotly"),
  color.function = c("ryb", "greens"),
  color.override = NULL,
  color.n = 100,
  colnames.split = NULL,
  use.censoring = T,
  clusters.to.censor = NULL,
  cols.to.censor = NULL,
  ...
)
}
\arguments{
\item{fsom}{An object as returned from \link{som.codes.dt}; fsom$codes.dt is required.}

\item{heatmap.type}{\emph{Matched argument} Character string used to determine the returned heatmap type: "pheatmap" or "plotly".}

\item{color.function}{\emph{Matched argument} Character string used to determine which pre-defined heatmap color function to use: 'ryb' or 'greens'. See \link[RColorBrewer]{brewer.pal} \strong{Details}.}

\item{color.override}{Color function; if defined, will override the default \code{color.function}.}

\item{color.n}{Numeric (default = 100); the number of colors to interpolate using the defined \code{color.function}.}

\item{colnames.split}{Character/separator (" ","_"); used to split column names to improve 'readability'.}

\item{use.censoring}{\emph{Specialized case} Logical; if TRUE and a 'censor' column exists in fsom$codes.dt, cluster(s) marked as TRUE will be dropped from the heatmap.}

\item{clusters.to.censor}{\emph{Specialized case} Numeric vector; the defined cluster(s) will be dropped from the heatmap.}

\item{cols.to.censor}{\emph{Specialized case} Character vector; the defined column(s) will be dropped from the heatmap.}

\item{...}{\link[pheatmap]{pheatmap} arguments. Primarily used to define \code{scale='row'}.}
}
\value{
A \link[pheatmap]{pheatmap} or \link[plotly]{plot_ly} heatmap, depending on \code{heatmap.type}. If \code{heatmap.type='plotly'}, the heatmap object will be row and column ordered to match \code{pheatmap}s dendrograms.
}
\description{
A heatmap of median expression values is a critical component of exploring clustering results. This function will return either a static \link[pheatmap]{pheatmap} for displaying/printing or an interactive \link[plotly]{plot_ly} heatmap object.
}
\examples{
fsom<-SOMnambulate:::prepared.examples('fsom')
fsom<-som.codes.dt(fsom,append.name = 'pbmc',k=20)

##heatmap; default 'pheatmap'
plotSOMheat(fsom)

##heatmap; row-scaled 'pheatmap'
plotSOMheat(fsom,scale='row')

##heatmap; row-scaled 'pheatmap'; drop a subset of clusters
plotSOMheat(fsom,scale='row',clusters.to.censor=c(1:10))

##heatmap; row-scaled 'pheatmap'; drop a subset of columns
plotSOMheat(fsom,scale='row',cols.to.censor=c("CD19_142Nd"))

##heatmap; row-scaled 'pheatmap'; split column names
plotSOMheat(fsom,scale='row',colnames.split = "_")

##heatmap; row-scaled 'pheatmap'; split column names; custom colors
plotSOMheat(fsom,scale='row',colnames.split = "_",color.override=viridis::plasma)

##heatmap; row-scaled; split column names; plotly object
plotSOMheat(fsom,scale='row',colnames.split = "_",heatmap.type='plotly')

##heatmap; row-scaled; split column names; plotly object; modifed plotly object
plotly::hide_colorbar(plotSOMheat(fsom,scale='row',colnames.split = "_",heatmap.type='plotly'))
}
